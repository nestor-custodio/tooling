#! /bin/env bash
source '/home/nestor/bin/std.lib'

# ---

{ # -- Help Text -- #

	cat <<-EOF | store-as usage
		Usage: $( script-name ) [DATABASE] [-- MYCLI_OPTIONS]

		Convenience wrapper for connecting to MySQL using 'mycli'.

		When a DATABASE *name* is given, it is assumed to be available on the
		CloudSQL 'mysql' DB instance. When a DATABASE *url* is given, it will
		be used as-is. If no DATABASE is given and a DATABASE_URL environment
		variable is set, that will be used. As a final fallback, the database
		name given in the Rails config (if any) for the current ENV is used.

		Mandatory arguments to long options are mandatory for short options too.
		  --help                    Show this help text.

		Exit status:
		  0  if OK,
		  1  if invalid option,
		  2  if 'mycli' executable not found.
	EOF

}

# ---

{ # -- Parameter Processing: Options -- #

	CHAR_OPTS=''
	LONG_OPTS='help'

	set-params
	while true; do
		option="$1" && shift
		case "$option" in
			(--help) exit-out "$usage" ;;
			(--) break ;;  # No more options.
		esac
	done

}

{ # -- Parameter Processing: Positionals -- #

	database="$1" && shift

	# Pull from DATABASE_URL, if available.
	#
	[ -n "$database" ] || database="$DATABASE_URL"

	# Pull from Rails DB config, if available.
	#
	rails_db_config="${HOME}/dev/config/database.yml"
	[ -n "$database" ] || ( yaml ".${RAILS_ENV}.database" < "$rails_db_config" ) 2> /dev/null | store-as database

	[ -n "$database" ] || error-out 1 'no DATABASE given or available via ENV or Rails config'

}

# ---
# ---


mycli_exec="$( command -v mycli )"
[ -n "$mycli_exec" ] || error-out 2 'mycli executable not found'

grep -P --quiet '(mysql|my)://' <<< "$database" || database="mysql://nestor@mysql/${database}"
"$mycli_exec" --myclirc="~/.config/mycli/config" "$database" "$@"
