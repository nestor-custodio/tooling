#! /bin/env bash
source '/home/nestor/bin/std.lib'

# ---

{ # -- Help Text -- #

	cat <<-EOF | store-as usage
		Usage: $( script-name ) CHANNEL [SUBJECT] MESSAGE

		Sends a message via the specified channel.

		Mandatory arguments to long options are mandatory for short options too.
		  --help                    Show this help text.

		CHANNEL
		  Identifies the messaging channel to use for delivery.
		  Only available value right now is "pushover".

		Exit status:
		  0  if OK,
		  1  if invalid option,
		  2  on invalid CHANNEL,
		  3  if message failed to send.
	EOF

}

# ---

{ # -- Parameter Processing: Options -- #

	CHAR_OPTS=''
	LONG_OPTS='help'

	set-params
	while true; do
		option="$1" && shift
		case "$option" in
			(--help) exit-out "$usage" ;;
			(--) break ;;  # No more options.
		esac
	done

}

{ # -- Parameter Processing: Positionals -- #

	channel=''
	subject=''
	message=''

	case "$#" in

		2)
			channel="$1" && shift
			message="$1" && shift
			;;

		3)
			channel="$1" && shift
			subject="$1" && shift
			message="$1" && shift
			;;

		*) error-out 1 'invalid option(s)' ;;
	esac

}

# ---
# ---


case "$channel" in

	(pushover)
		# Fetch keys.
		#
		project 'attributes/pushover-keys' | store-as pushover_keys
		json '.user'         <<< "$pushover_keys" | store-as user_key
		json '.services.gcp' <<< "$pushover_keys" | store-as service_key

		# Send the message.
		#
		curl -s --form-string 'priority=0'                 \
						--form-string "user=${user_key}"           \
						--form-string "token=${service_key}"       \
						--form-string "title=${subject}"           \
						--form-string "message=${message}"         \
						'https://api.pushover.net/1/messages.json' \
		| json '.status' | hasline 1 &> /dev/null
		;;

	*) error-out 2 "unknown CHANNEL (${channel})" ;;
esac
