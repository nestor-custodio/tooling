#! /bin/env bash
source '/home/nestor/bin/std.lib'

# ---

{ # -- Help Text -- #

	cat <<-EOF | store-as usage
		Usage: $( script-name ) QUERY [-- Q OPTIONS]

		No-thoughts PSV query runner (via 'q'); generates PSV output.
		If QUERY begins with '@' or ends in '.sql', it's taken as a
		filename and its *content* is used as the querytext.


		Mandatory arguments to long options are mandatory for short options too.
		  --help                    Show this help text.


		Exit Status:
		  0  if OK,
		  1  if invalid option,
		  2  if QUERY file (via @) not found/readable.
	EOF

}

# ---

{ # -- Parameter Processing: Options -- #

	CHAR_OPTS=''
	LONG_OPTS='help'

	set-params
	while true; do
		option="$1" && shift
		case "$option" in
			(--help) exit-out "$usage" ;;
			(--) break ;;  # No more options.
		esac
	done

}

{ # -- Parameter Processing: Positionals -- #

	query_param="$1" && shift
	[ -n "$query_param" ] || error-out 1 'no QUERY given'

}

# ---
# ---


# Sort out the querytext.
#
if starts-with? '@' <<< "$query_param"; then
	# We've been given a query *file*.
	#
	store-as querytext < "${query_param:1}"
elif ends-with? '.sql' <<< "$query_param"; then
	# We've been given a query *file*.
	#
	store-as querytext < "$query_param"
else
	# We've been given the raw querytext.
	#
	querytext="$query_param"
fi


# Run the query.
#
if [ "$#" == 0 ]
	then q -p -H "$querytext" -O
	else q -p -H "$querytext" -O "$@"
fi
