#! /bin/env bash
source '/home/nestor/bin/std.lib'

# ---

{ # -- Help Text -- #

	cat <<-EOF | store-as usage
		Usage: $( script-name ) [--FILE_ENCODING] QUERY
		       $( name-blanks ) [--FILE_ENCODING] --fields[=]DATAFILE

		No-thoughts PSV query runner (via 'q'); presents legible output.
		If QUERY begins with '@' or ends in '.sql', it's taken as a
		filename and its *content* is used as the querytext.

		If called with '--fields', field names (and types) for the given
		DATAFILE are reported.


		Mandatory arguments to long options are mandatory for short options too.
		  --help                    Show this help text.


		File Encodings
		  A file encoding flag can be given directly (e.g. '--utf-8').

		  Available file encodings are:
		  - utf-8
		  - utf-16
		  - utf-bom (utf-8 w/ BOM)
		  - iso-8859-1 / latin-1 / ascii
		  - windows-1252 / cp1252 / windows

		  Input files are assumed to be UTF-8 data unless stated otherwise.


		Exit Status:
		  0  if OK,
		  1  if invalid option,
		  2  if QUERY file (via @) or DATAFILE not found/readable.
	EOF

}

# ---

{ # -- Parameter Processing: Options -- #

	# Set defaults.

	encoding='utf-8'

	# ---
	# ---

	CHAR_OPTS=''
	LONG_OPTS='help,fields:,names:,types:'
	LONG_OPTS="${LONG_OPTS},utf-8"
	LONG_OPTS="${LONG_OPTS},utf-16"
	LONG_OPTS="${LONG_OPTS},utf-bom"
	LONG_OPTS="${LONG_OPTS},iso-8859-1,latin-1,ascii"
	LONG_OPTS="${LONG_OPTS},windows-1252,cp1252,windows"

	set-params
	while true; do
		option="$1" && shift
		case "$option" in
			(--help) exit-out "$usage" ;;
			(--) break ;;  # No more options.


			(--fields|--names|--types)
				mode='fields'

				datafile="$1" && shift
				[ -n "$datafile" ] || error-out 1 'no DATAFILE given'
				[ -r "$datafile" ] || error-out 2 'DATAFILE not readable'

				# shellcheck disable=SC2016
				q -p -H "SELECT * FROM ${datafile}" -A 2>/dev/null                          \
				| tail --lines=+5 | sed -r -e 's#^ *`(.*)` - (.*)$#\1|\2#'                  \
				| q -p "SELECT c1 as name, c2 as type FROM -" -b -O -T | bat --language='tsv'

				exit-out
				;;


			(--utf-8                          ) encoding='utf-8'        ;;
			(--utf-16                         ) encoding='utf-16'       ;;
			(--utf-bom                        ) encoding='utf-8-sig'    ;;
			(--iso-8859-1|--latin-1|--ascii   ) encoding='iso-8859-1'   ;;
			(--windows-1252|--cp1252|--windows) encoding='windows-1252' ;;

		esac
	done

}

{ # -- Parameter Processing: Positionals -- #

	query_param="$1" && shift
	[ -n "$query_param" ] || error-out 1 'no QUERY given'


	[ "$#" == 0 ] || error-out 1 'invalid option(s)'

}

# ---
# ---


psv- "$query_param" -- -e "$encoding" -b -T | hbat --language='tsv' --wrap='never'
