#! /bin/env bash
source '/home/nestor/bin/std.lib'

# ---

{ # -- Help Text -- #

	cat <<-EOF | store-as usage
		Usage: $( script-name ) [LOOKUP [...]]

		Pulls the requested credentials from the *project* metadata's store.

		The LOOKUP keys can be separated via whitespace or fwd-slashes ('/').


		Mandatory arguments to long options are mandatory for short options too.
		  --help                    Show this help text.
		  --keys                    Sanitize all credential *values*.


		Exit Status:
		  0  if OK,
		  1  if invalid option.
	EOF

}

# ---

{ # -- Parameter Processing: Options -- #

	# Set defaults.

	sanitizer=''

	# ---
	# ---

	CHAR_OPTS=''
	LONG_OPTS='help,keys,safe,tree'

	set-params
	while true; do
		option="$1" && shift
		case "$option" in
			(--help) exit-out "$usage" ;;
			(--) break ;;  # No more options.


			(--keys|--safe|--tree)
				sanitizer=' | deep_sanitize'
				;;

		esac
	done

}

{ # -- Parameter Processing: Positionals -- #

	# Note we never check for params
	# and we never clear the param list.
	#
	lookup=''
	while [ "$#" != 0 ]; do
		param="$1" && shift
		IFS='/' read -r -a segments <<< "$param"
		for segment in "${segments[@]}"; do
			if has? --regex '[- ]' <<< "$segment"
				then lookup+=".\"${segment}\""
				else lookup+=".${segment}"
			fi
		done
	done

}

# ---
# ---


project attributes/credentials | json "${lookup:-.} ${sanitizer}"
