#! /bin/env bash
source '/home/nestor/bin/std.lib'

# ---

{ # -- Help Text -- #

	cat <<-EOF | store-as usage
		Usage: $( script-name ) ENGINE DATABASE_NAME

		Runs the given SQL (via STDIN) on our Cloud SQL instance for the given
		ENGINE ('postgres'/'mysql'/etc), under the given DATABASE_NAME.


		Mandatory arguments to long options are mandatory for short options too.
		  --help                    Show this help text.


		Exit Status:
		  0  if OK,
		  1  if invalid option,
		  2  if no ENGINE / DATABASE_NAME given.
	EOF

}

# ---

{ # -- Parameter Processing: Options -- #

	CHAR_OPTS=''
	LONG_OPTS='help'

	set-params
	while true; do
		option="$1" && shift
		case "$option" in
			(--help) exit-out "$usage" ;;
			(--) break ;;  # No more options.
		esac
	done

}

{ # -- Parameter Processing: Positionals -- #

  engine="$1" && shift
  [ -n "$engine" ] || error-out 2 'no ENGINE given'

	database_name="$1" && shift
	[ -n "$database_name" ] || error-out 2 'no DATABASE_NAME given'


	[ "$#" == 0 ] || error-out 1 'invalid option(s)'

}

# ---
# ---


case "$engine" in

  (pg|postgres|postgresql)
    # Ensure pg_dump.
    #
    dpkg --get-selections | 'has?' 'postgresql-client' || sudo apt-get -qqy install postgresql-client

    dropdb "$database_name" --if-exists --force
    createdb "$database_name"

    sed -r -e 's#^((CREATE EXTENSION|COMMENT ON EXTENSION) .*\bplpgsql\b)#-- \1#g' \
    | psql --dbname="postgres://${USER}@postgres/${database_name}"
    ;;

  (my|maria|aurora|mariadb|percona)
    noop # TODO
    ;;

  *) error-out 3 'unexpected source engine'
esac
