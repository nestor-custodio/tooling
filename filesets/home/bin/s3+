#! /bin/env bash
source '/home/nestor/bin/std.lib'

# ---

{ # -- Help Text -- #

	cat <<-EOF | store-as usage
		Usage: $( script-name ) [--bucket BUCKET] [--at MOUNT_POINT] [--profile PROFILE]

		Mounts the given S3 bucket at the given location.
		If no BUCKET is given, it will attempt to be read from "\$BUCKET".
		The default MOUNT_POINT and PROFILE are "\$DEV_ROOT/s3" and "default".


		Mandatory arguments to long options are mandatory for short options too.
		  --help                    Show this help text.


		Exit Status:
		  0  if OK,
		  1  if invalid option,
		  2  if failed to mount.
	EOF

}

# ---

{ # -- Parameter Processing: Options -- #

	# Set defaults.

	bucket="$BUCKET"
	mount_point="${DEV_ROOT}/s3"
	aws_profile='default'

	# ---
	# ---

	CHAR_OPTS=''
	LONG_OPTS='help,bucket:,mount:,at:,in:,on:,profile:'

	set-params
	while true; do
		option="$1" && shift
		case "$option" in
			(--help) exit-out "$usage" ;;
			(--) break ;;  # No more options.


			(--bucket)
				bucket="$1" && shift
				;;

			(--mount|--at|--in|--on)
				mount_point="$1" && shift
				;;

			(--profile)
				aws_profile="$1" && shift
				;;

		esac
	done

}

{ # -- Parameter Processing: Positionals -- #

	[ "$#" == 0 ] || error-out 1 'invalid option(s)'

}

# ---
# ---


# Ensure s3fs.
#
command -v s3fs &> /dev/null || sudo apt-get -qqy install s3fs

# Ensure we have a bucket to work with.
#
[ -n "$bucket" ] || error-out 1 "no BUCKET given (via --bucket) or set (via \$BUCKET)"


mkdir -p "$mount_point"
s3fs "$bucket" "$mount_point" -o "profile=${aws_profile}" || exit-out 2
