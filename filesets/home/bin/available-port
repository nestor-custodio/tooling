#! /bin/env bash
source '/home/nestor/bin/std.lib'

# ---

{ # -- Help Text -- #

	cat <<-EOF | store-as usage
		Usage: $( script-name ) [PORT_RANGE]

		Finds an available port in the given PORT_RANGE (defaults to 3001-3999).


		Mandatory arguments to long options are mandatory for short options too.
		  --help                    Show this help text.


		Exit Status:
		  0  if OK,
		  1  if invalid option,
		  2  if no available port.
	EOF

}

# ---

{ # -- Parameter Processing: Options -- #

	# Set defaults.

	CHAR_OPTS=''
	LONG_OPTS='help'

	set-params
	while true; do
		option="$1" && shift
		case "$option" in
			(--help) exit-out "$usage" ;;
			(--) break ;;  # No more options.
		esac
	done

}

{ # -- Parameter Processing: Positionals -- #

	port_range="$1" && shift
	[ -n "$port_range" ] || port_range='3001-3999'
	'has-line?' --regex '\d+-\d+' <<< "$port_range" || error-out 1 'invalid PORT_RANGE'


	[ "$#" == 0 ] || error-out 1 'invalid option(s)'

}

# ---
# ---


sudo lsof -i -P -n | grep -P '(?<=:)[0-9]+\b' --only-matching | store-as unavailable_ports
shuf -n1 --input-range="$port_range" | while read -r port; do
	'has-line?' "$port" <<< "$unavailable_ports" || exit-out 0 "$port"
done

exit 2
