#! /bin/env bash
source '/home/nestor/bin/std.lib'

# ---

{ # -- Help Text -- #

	cat <<-EOF | store-as usage
		Usage: $( script-name ) [--short] METADATA_KEY

		Queries the GCP metadata store for the given key.


		Mandatory arguments to long options are mandatory for short options too.
		  --help                    Show this help text.
		  --short                   Return the last segment (after the final "/")
		                            for metadata values that look like a relative
		                            URL (see values for "machine-type" or "zone").


		Exit Status:
		  0  if OK,
		  1  if invalid option,
		  2  if unable to retrieve requested metadata.
	EOF

}

# ---

{ # -- Parameter Processing: Options -- #

	# Set defaults.

	short=''

	# --
	# --

	CHAR_OPTS=''
	LONG_OPTS='help,short'

	set-params
	while true; do
		option="$1" && shift
		case "$option" in
			(--help) exit-out "$usage" ;;
			(--) break ;;  # No more options.


			(--short)
				short='1'
				;;

		esac
	done

}

{ # -- Parameter Processing: Positionals -- #

	metadata_key="$1" && shift
	[ -n "$metadata_key" ] || error-out 1 'no METADATA_KEY given'


	[ "$#" == 0 ] || error-out 1 'invalid option(s)'

}

# ---
# ---

function fetch {
	local metadata_key="$1" && shift


	# Set the GCP Metadata API's base URI.
	# (https://cloud.google.com/compute/docs/storing-retrieving-metadata)
	#
	local gcp_metadata_api='http://metadata.google.internal/computeMetadata/v1'

	set-trap ERR 'exit-out 2'
	curl "${gcp_metadata_api}/${metadata_key}" --silent --header 'Metadata-Flavor: Google' --fail | clean
	clear-trap ERR
}

# ---
# ---


if [ -z "$short" ]
	then fetch "$metadata_key"
	else fetch "$metadata_key" | sed -e 's|.*/||'
fi
