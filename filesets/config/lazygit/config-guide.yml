# As of v0.42.0 (2024-05-19)


  "gui": # Config relating to the Lazygit UI

    "authorColors":
      type: 'object w/ string values'
      description: |
        See https://github.com/jesseduffield/lazygit/blob/master/docs/Config.md#custom-author-color

    "branchColors":
      type: 'object w/ string values'
      description: |
        See https://github.com/jesseduffield/lazygit/blob/master/docs/Config.md#custom-branch-color

    "scrollHeight":
      type: 'integer'
      description: |
        The number of lines you scroll by when scrolling the main window

    "scrollPastBottom":
      type: 'boolean'
      description: |
        If true, allow scrolling past the bottom of the content in the main window

    "scrollOffMargin":
      type: 'integer'
      description: |
        See https://github.com/jesseduffield/lazygit/blob/master/docs/Config.md#scroll-off-margin

    "scrollOffBehavior":
      type: 'string'
      description: |
        One of: 'margin' (default) | 'jump'

    "mouseEvents":
      type: 'boolean'
      description: |
        If true, capture mouse events.
        When mouse events are captured, it's a little harder to select text: e.g. requiring you to hold the option key when on macOS.

    "skipDiscardChangeWarning":
      type: 'boolean'
      description: |
        If true, do not show a warning when discarding changes in the staging view.

    "skipStashWarning":
      type: 'boolean'
      description: |
        If true, do not show warning when applying/popping the stash

    "skipNoStagedFilesWarning":
      type: 'boolean'
      description: |
        If true, do not show a warning when attempting to commit without any staged files; instead stage all unstaged files.

    "skipRewordInEditorWarning":
      type: 'boolean'
      description: |
        If true, do not show a warning when rewording a commit via an external editor

    "sidePanelWidth":
      type: 'number'
      description: |
        Fraction of the total screen width to use for the left side section. You may want to pick a small number (e.g. 0.2) if you're using a narrow screen, so that you can see more of the main section.
        Number from 0 to 1.0.

    "expandFocusedSidePanel":
      type: 'boolean'
      description: |
        If true, increase the height of the focused side window; creating an accordion effect.

    "mainPanelSplitMode":
      type: 'enum'
      description: |
        Sometimes the main window is split in two (e.g. when the selected file has both staged and unstaged changes). This setting controls how the two sections are split.
        Options are:
        - 'horizontal': split the window horizontally
        - 'vertical': split the window vertically
        - 'flexible': (default) split the window horizontally if the window is wide enough, otherwise split vertically

    "enlargedSideViewLocation":
      type: 'string'
      description: |
        How the window is split when in half screen mode (i.e. after hitting '+' once).
        Possible values:
        - 'left': split the window horizontally (side panel on the left, main view on the right)
        - 'top': split the window vertically (side panel on top, main view below)

    "language":
      type: 'enum'
      description: |
        One of 'auto' (default) | 'en' | 'zh-CN' | 'zh-TW' | 'pl' | 'nl' | 'ja' | 'ko' | 'ru'

    "timeFormat":
      type: 'string'
      description: |
        Format used when displaying time e.g. commit time.
        Uses Go's time format syntax: https://pkg.go.dev/time#Time.Format

    "shortTimeFormat":
      type: 'string'
      description: |
        Format used when displaying time if the time is less than 24 hours ago.
        Uses Go's time format syntax: https://pkg.go.dev/time#Time.Format

    "theme": # https://github.com/jesseduffield/lazygit/blob/master/docs/Config.md#color-attributes

      "activeBorderColor":
        type: 'string[]'
        description: |
          Border color of focused window

      "inactiveBorderColor":
        type: 'string[]'
        description: |
          Border color of non-focused windows

      "searchingActiveBorderColor":
        type: 'string[]'
        description: |
          Border color of focused window when searching in that window

      "optionsTextColor":
        type: 'string[]'
        description: |
          Color of keybindings help text in the bottom line

      "selectedLineBgColor":
        type: 'string[]'
        description: |
          Background color of selected line.
          See https://github.com/jesseduffield/lazygit/blob/master/docs/Config.md#highlighting-the-selected-line

      "cherryPickedCommitFgColor":
        type: 'string[]'
        description: |
          Foreground color of copied commit

      "cherryPickedCommitBgColor":
        type: 'string[]'
        description: |
          Background color of copied commit

      "markedBaseCommitFgColor":
        type: 'string[]'
        description: |
          Foreground color of marked base commit (for rebase)

      "markedBaseCommitBgColor":
        type: 'string[]'
        description: |
          Background color of marked base commit (for rebase)

      "unstagedChangesColor":
        type: 'string[]'
        description: |
          Color for file with unstaged changes

      "defaultFgColor":
        type: 'string[]'
        description: |
          Default text color

    "commitLength": # Config relating to the commit length indicator

      "show":
        type: 'boolean'
        description: |
          If true, show an indicator of commit message length

    "showListFooter":
      type: 'boolean'
      description: |
        If true, show the '5 of 20' footer at the bottom of list views

    "showFileTree":
      type: 'boolean'
      description: |
        If true, display the files in the file views as a tree. If false, display the files as a flat list.
        This can be toggled from within Lazygit with the '~' key, but that will not change the default.

    "showRandomTip":
      type: 'boolean'
      description: |
        If true, show a random tip in the command log when Lazygit starts

    "showCommandLog":
      type: 'boolean'
      description: |
        If true, show the command log

    "showBottomLine":
      type: 'boolean'
      description: |
        If true, show the bottom line that contains keybinding info and useful buttons. If false, this line will be hidden except to display a loader for an in-progress action.

    "showPanelJumps":
      type: 'boolean'
      description: |
        If true, show jump-to-window keybindings in window titles.

    "showIcons":
      type: 'boolean'
      description: |
        Deprecated: use nerdFontsVersion instead

    "nerdFontsVersion":
      type: 'enum'
      description: |
        Nerd fonts version to use.
        One of: '2' | '3' | empty string (default)
        If empty, do not show icons.

    "showFileIcons":
      type: 'boolean'
      description: |
        If true (default), file icons are shown in the file views. Only relevant if NerdFontsVersion is not empty.

    "commitHashLength":
      type: 'integer'
      description: |
        Length of commit hash in commits view. 0 shows '*' if NF icons aren't on.

    "showBranchCommitHash":
      type: 'boolean'
      description: |
        If true, show commit hashes alongside branch names in the branches view.

    "commandLogSize":
      type: 'integer'
      description: |
        Height of the command log view

    "splitDiff":
      type: 'enum'
      description: |
        Whether to split the main window when viewing file changes.
        One of: 'auto' | 'always'
        If 'auto', only split the main window when a file has both staged and unstaged changes

    "windowSize":
      type: 'enum'
      description: |
        Default size for focused window. Window size can be changed from within Lazygit with '+' and '_' (but this won't change the default).
        One of: 'normal' (default) | 'half' | 'full'

    "border":
      type: 'enum'
      description: |
        Window border style.
        One of 'rounded' (default) | 'single' | 'double' | 'hidden'

    "animateExplosion":
      type: 'boolean'
      description: |
        If true, show a seriously epic explosion animation when nuking the working tree.

    "portraitMode":
      type: 'string'
      description: |
        Whether to stack UI components on top of each other.
        One of 'auto' (default) | 'always' | 'never'

    "filterMode":
      type: 'enum'
      description: |
        How things are filtered when typing '/'.
        One of 'substring' (default) | 'fuzzy'

    "spinner": # Config relating to the spinner.

      "frames":
        type: 'string[]'
        description: |
          The frames of the spinner animation.

      "rate":
        type: 'integer'
        description: |
          The \speed\" of the spinner in milliseconds."

    "statusPanelView":
      type: 'enum'
      description: |
        Status panel view.
        One of 'dashboard' (default) | 'allBranchesLog'

  "git": # Config relating to git

    "paging": # https://github.com/jesseduffield/lazygit/blob/master/docs/Custom_Pagers.md

      "colorArg":
        type: 'enum'
        description: |
          Value of the --color arg in the git diff command. Some pagers want this to be set to 'always' and some want it set to 'never'

      "pager":
        type: 'string'
        description: |
          e.g.
          diff-so-fancy
          delta --dark --paging=never
          ydiff -p cat -s --wrap --width={{columnWidth}}

      "useConfig":
        type: 'boolean'
        description: |
          If true, Lazygit will use whatever pager is specified in `$GIT_PAGER`, `$PAGER`, or your *git config*. If the pager ends with something like ` | less` we will strip that part out, because less doesn't play nice with our rendering approach. If the custom pager uses less under the hood, that will also break rendering (hence the `--paging=never` flag for the `delta` pager).

      "externalDiffCommand":
        type: 'string'
        description: |
          e.g. 'difft --color=always'

    "commit": # Config relating to committing

      "signOff":
        type: 'boolean'
        description: |
          If true, pass '--signoff' flag when committing

      "autoWrapCommitMessage":
        type: 'boolean'
        description: |
          Automatic WYSIWYG wrapping of the commit message as you type

      "autoWrapWidth":
        type: 'integer'
        description: |
          If autoWrapCommitMessage is true, the width to wrap to

    "merging": # Config relating to merging

      "manualCommit":
        type: 'boolean'
        description: |
          If true, run merges in a subprocess so that if a commit message is required, Lazygit will not hang
          Only applicable to unix users.

      "args":
        type: 'string'
        description: |
          Extra args passed to `git merge`, e.g. --no-ff

    "mainBranches":
      type: 'string[]'
      description: |
        list of branches that are considered 'main' branches, used when displaying commits

    "skipHookPrefix":
      type: 'string'
      description: |
        Prefix to use when skipping hooks. E.g. if set to 'WIP', then pre-commit hooks will be skipped when the commit message starts with 'WIP'

    "autoFetch":
      type: 'boolean'
      description: |
        If true, periodically fetch from remote

    "autoRefresh":
      type: 'boolean'
      description: |
        If true, periodically refresh files and submodules

    "fetchAll":
      type: 'boolean'
      description: |
        If true, pass the --all arg to git fetch

    "branchLogCmd":
      type: 'string'
      description: |
        Command used when displaying the current branch git log in the main window

    "allBranchesLogCmd":
      type: 'string'
      description: |
        Command used to display git log of all branches in the main window

    "overrideGpg":
      type: 'boolean'
      description: |
        If true, do not spawn a separate process when using GPG

    "disableForcePushing":
      type: 'boolean'
      description: |
        If true, do not allow force pushes

    "commitPrefix": # https://github.com/jesseduffield/lazygit/blob/master/docs/Config.md#predefined-commit-message-prefix

      "pattern":
        type: 'string'
        description: |
          pattern to match on. E.g. for 'feature/AB-123' to match on the AB-123 use \^\\\\w+\\\\/(\\\\w+-\\\\w+).*\""

      "replace":
        type: 'string'
        description: |
          Replace directive. E.g. for 'feature/AB-123' to start the commit message with 'AB-123 ' use \[$1] \""

    "commitPrefixes":
      type: 'object w/ `commitPrefix`-like values'
      description: |
        See https://github.com/jesseduffield/lazygit/blob/master/docs/Config.md#predefined-commit-message-prefix

    "parseEmoji":
      type: 'boolean'
      description: |
        If true, parse emoji strings in commit messages e.g. render :rocket: as 🚀
        (This should really be under 'gui', not 'git')

    "log": # Config for showing the log in the commits view

      "order":
        type: 'enum'
        description: |
          One of: 'date-order' | 'author-date-order' | 'topo-order' | 'default'
          'topo-order' makes it easier to read the git log graph, but commits may not
          appear chronologically. See https://git-scm.com/docs/
          Deprecated: Configure this with `Log menu -\u003e Commit sort order` (\u003cc-l\u003e in the commits window by default).

      "showGraph":
        type: 'enum'
        description: |
          This determines whether the git graph is rendered in the commits panel
          One of 'always' | 'never' | 'when-maximised'
          Deprecated: Configure this with `Log menu -\u003e Show git graph` (\u003cc-l\u003e in the commits window by default).

      "showWholeGraph":
        type: 'boolean'
        description: |
          displays the whole git graph by default in the commits view (equivalent to passing the `--all` argument to `git log`)

    "truncateCopiedCommitHashesTo":
      type: 'integer'
      description: |
        When copying commit hashes to the clipboard, truncate them to this
        length. Set to 40 to disable truncation.

  "update": # Periodic update checks

    "method":
      type: 'enum'
      description: |
        One of: 'prompt' (default) | 'background' | 'never'

    "days":
      type: 'integer'
      description: |
        Period in days between update checks

  "refresher": # Background refreshes

    "refreshInterval":
      type: 'integer'
      description: |
        File/submodule refresh interval in seconds.
        Auto-refresh can be disabled via option 'git.autoRefresh'.

    "fetchInterval":
      type: 'integer'
      description: |
        Re-fetch interval in seconds.
        Auto-fetch can be disabled via option 'git.autoFetch'.

  "confirmOnQuit":
    type: 'boolean'
    description: |
      If true, show a confirmation popup before quitting Lazygit

  "quitOnTopLevelReturn":
    type: 'boolean'
    description: |
      If true, exit Lazygit when the user presses escape in a context where there is nothing to cancel/close

  "os": # Config relating to things outside of Lazygit like how files are opened, copying to clipboard, etc

    "edit":
      type: 'string'
      description: |
        Command for editing a file. Should contain \{{filename}}\"."

    "editAtLine":
      type: 'string'
      description: |
        Command for editing a file at a given line number. Should contain
        \{{filename}}\", and may optionally contain \"{{line}}\"."

    "editAtLineAndWait":
      type: 'string'
      description: |
        Same as EditAtLine, except that the command needs to wait until the
        window is closed.

    "editInTerminal":
      type: 'boolean'
      description: |
        Whether lazygit suspends until an edit process returns
        Pointer to bool so that we can distinguish unset (nil) from false.
        We're naming this `editInTerminal` for backwards compatibility

    "openDirInEditor":
      type: 'string'
      description: |
        For opening a directory in an editor

    "editPreset":
      type: 'string'
      description: |
        A built-in preset that sets all of the above settings. Supported presets
        are defined in the getPreset function in editor_presets.go.

    "open":
      type: 'string'
      description: |
        Command for opening a file, as if the file is double-clicked. Should
        contain \{{filename}}\", but doesn't support \"{{line}}\"."

    "openLink":
      type: 'string'
      description: |
        Command for opening a link. Should contain \{{link}}\"."

    "editCommand":
      type: 'string'
      description: |
        EditCommand is the command for editing a file.
        Deprecated: use Edit instead. Note that semantics are different:
        EditCommand is just the command itself, whereas Edit contains a
        \{{filename}}\" variable."

    "editCommandTemplate":
      type: 'string'
      description: |
        EditCommandTemplate is the command template for editing a file
        Deprecated: use EditAtLine instead.

    "openCommand":
      type: 'string'
      description: |
        OpenCommand is the command for opening a file
        Deprecated: use Open instead.

    "openLinkCommand":
      type: 'string'
      description: |
        OpenLinkCommand is the command for opening a link
        Deprecated: use OpenLink instead.

    "copyToClipboardCmd":
      type: 'string'
      description: |
        CopyToClipboardCmd is the command for copying to clipboard.
        See https://github.com/jesseduffield/lazygit/blob/master/docs/Config.md#custom-command-for-copying-to-clipboard

  "disableStartupPopups":
    type: 'boolean'
    description: |
      If true, don't display introductory popups upon opening Lazygit.
      Lazygit sets this to true upon first runninng the program so that you don't see introductory popups every time you open the program.

  "customCommands":
    type: 'object[]'
    description: |
      User-configured commands that can be invoked from within Lazygit

  "services":
    type: 'object w/ string values'
    description: |
      See https://github.com/jesseduffield/lazygit/blob/master/docs/Config.md#custom-pull-request-urls

  "notARepository":
    type: 'enum'
    description: |
      What to do when opening Lazygit outside of a git repo.
      - 'prompt': (default) ask whether to initialize a new repo or open in the most recent repo
      - 'create': initialize a new repo
      - 'skip': open most recent repo
      - 'quit': exit Lazygit

  "promptToReturnFromSubprocess":
    type: 'boolean'
    description: |
      If true, display a confirmation when subprocess terminates. This allows you to view the output of the subprocess before returning to Lazygit.

  "keybinding": # Keybindings

    "universal":

      "quit":
        type: 'string'

      "quit-alt1":
        type: 'string'

      "return":
        type: 'string'

      "quitWithoutChangingDirectory":
        type: 'string'

      "togglePanel":
        type: 'string'

      "prevItem":
        type: 'string'

      "nextItem":
        type: 'string'

      "prevItem-alt":
        type: 'string'

      "nextItem-alt":
        type: 'string'

      "prevPage":
        type: 'string'

      "nextPage":
        type: 'string'

      "scrollLeft":
        type: 'string'

      "scrollRight":
        type: 'string'

      "gotoTop":
        type: 'string'

      "gotoBottom":
        type: 'string'

      "toggleRangeSelect":
        type: 'string'

      "rangeSelectDown":
        type: 'string'

      "rangeSelectUp":
        type: 'string'

      "prevBlock":
        type: 'string'

      "nextBlock":
        type: 'string'

      "prevBlock-alt":
        type: 'string'

      "nextBlock-alt":
        type: 'string'

      "nextBlock-alt2":
        type: 'string'

      "prevBlock-alt2":
        type: 'string'

      "jumpToBlock":
        type: 'string[]'

      "nextMatch":
        type: 'string'

      "prevMatch":
        type: 'string'

      "startSearch":
        type: 'string'

      "optionMenu":
        type: 'string'

      "optionMenu-alt1":
        type: 'string'

      "select":
        type: 'string'

      "goInto":
        type: 'string'

      "confirm":
        type: 'string'

      "confirmInEditor":
        type: 'string'

      "remove":
        type: 'string'

      "new":
        type: 'string'

      "edit":
        type: 'string'

      "openFile":
        type: 'string'

      "scrollUpMain":
        type: 'string'

      "scrollDownMain":
        type: 'string'

      "scrollUpMain-alt1":
        type: 'string'

      "scrollDownMain-alt1":
        type: 'string'

      "scrollUpMain-alt2":
        type: 'string'

      "scrollDownMain-alt2":
        type: 'string'

      "executeCustomCommand":
        type: 'string'

      "createRebaseOptionsMenu":
        type: 'string'

      "pushFiles":
        type: 'string'
        description: |
          'Files' appended for legacy reasons

      "pullFiles":
        type: 'string'
        description: |
          'Files' appended for legacy reasons

      "refresh":
        type: 'string'

      "createPatchOptionsMenu":
        type: 'string'

      "nextTab":
        type: 'string'

      "prevTab":
        type: 'string'

      "nextScreenMode":
        type: 'string'

      "prevScreenMode":
        type: 'string'

      "undo":
        type: 'string'

      "redo":
        type: 'string'

      "filteringMenu":
        type: 'string'

      "diffingMenu":
        type: 'string'

      "diffingMenu-alt":
        type: 'string'

      "copyToClipboard":
        type: 'string'

      "openRecentRepos":
        type: 'string'

      "submitEditorText":
        type: 'string'

      "extrasMenu":
        type: 'string'

      "toggleWhitespaceInDiffView":
        type: 'string'

      "increaseContextInDiffView":
        type: 'string'

      "decreaseContextInDiffView":
        type: 'string'

      "openDiffTool":
        type: 'string'

    "status":

      "checkForUpdate":
        type: 'string'

      "recentRepos":
        type: 'string'

      "allBranchesLogGraph":
        type: 'string'

    "files":

      "commitChanges":
        type: 'string'

      "commitChangesWithoutHook":
        type: 'string'

      "amendLastCommit":
        type: 'string'

      "commitChangesWithEditor":
        type: 'string'

      "findBaseCommitForFixup":
        type: 'string'

      "confirmDiscard":
        type: 'string'

      "ignoreFile":
        type: 'string'

      "refreshFiles":
        type: 'string'

      "stashAllChanges":
        type: 'string'

      "viewStashOptions":
        type: 'string'

      "toggleStagedAll":
        type: 'string'

      "viewResetOptions":
        type: 'string'

      "fetch":
        type: 'string'

      "toggleTreeView":
        type: 'string'

      "openMergeTool":
        type: 'string'

      "openStatusFilter":
        type: 'string'

      "copyFileInfoToClipboard":
        type: 'string'

    "branches":

      "createPullRequest":
        type: 'string'

      "viewPullRequestOptions":
        type: 'string'

      "copyPullRequestURL":
        type: 'string'

      "checkoutBranchByName":
        type: 'string'

      "forceCheckoutBranch":
        type: 'string'

      "rebaseBranch":
        type: 'string'

      "renameBranch":
        type: 'string'

      "mergeIntoCurrentBranch":
        type: 'string'

      "viewGitFlowOptions":
        type: 'string'

      "fastForward":
        type: 'string'

      "createTag":
        type: 'string'

      "pushTag":
        type: 'string'

      "setUpstream":
        type: 'string'

      "fetchRemote":
        type: 'string'

      "sortOrder":
        type: 'string'

    "worktrees":

      "viewWorktreeOptions":
        type: 'string'

    "commits":

      "squashDown":
        type: 'string'

      "renameCommit":
        type: 'string'

      "renameCommitWithEditor":
        type: 'string'

      "viewResetOptions":
        type: 'string'

      "markCommitAsFixup":
        type: 'string'

      "createFixupCommit":
        type: 'string'

      "squashAboveCommits":
        type: 'string'

      "moveDownCommit":
        type: 'string'

      "moveUpCommit":
        type: 'string'

      "amendToCommit":
        type: 'string'

      "resetCommitAuthor":
        type: 'string'

      "pickCommit":
        type: 'string'

      "revertCommit":
        type: 'string'

      "cherryPickCopy":
        type: 'string'

      "pasteCommits":
        type: 'string'

      "markCommitAsBaseForRebase":
        type: 'string'

      "tagCommit":
        type: 'string'

      "checkoutCommit":
        type: 'string'

      "resetCherryPick":
        type: 'string'

      "copyCommitAttributeToClipboard":
        type: 'string'

      "openLogMenu":
        type: 'string'

      "openInBrowser":
        type: 'string'

      "viewBisectOptions":
        type: 'string'

      "startInteractiveRebase":
        type: 'string'

    "amendAttribute":

      "resetAuthor":
        type: 'string'

      "setAuthor":
        type: 'string'

      "addCoAuthor":
        type: 'string'

    "stash":

      "popStash":
        type: 'string'

      "renameStash":
        type: 'string'

    "commitFiles":

      "checkoutCommitFile":
        type: 'string'

    "main":

      "toggleSelectHunk":
        type: 'string'

      "pickBothHunks":
        type: 'string'

      "editSelectHunk":
        type: 'string'

    "submodules":

      "init":
        type: 'string'

      "update":
        type: 'string'

      "bulkMenu":
        type: 'string'

    "commitMessage":

      "commitMenu":
        type: 'string'

