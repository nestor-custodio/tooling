#! /bin/env bash
source '/home/nestor/bin/std.lib'

# ---

{ # -- Help Text -- #

	cat <<-EOF | store-as usage
		Usage: $( script-name ) HOSTFILE

		Wrapper for 'hostctl' that imports via simple hostfile reference.


		Mandatory arguments to long options are mandatory for short options too.
		  --help                    Show this help text.


		Examples:

		  # Load profile "sample" from "~/hostfiles/sample":
		  $( script-name ) sample

		  # Load profile "sample" from "~/hostfiles/group/sample":
		  $( script-name) group/sample


		Exit Status:
		  0  if OK,
		  1  if invalid option,
		  2  if hostfile not found/readable.
	EOF

}

# ---

{ # -- Parameter Processing: Options -- #

	CHAR_OPTS=''
	LONG_OPTS='help'

	set-params
	while true; do
		option="$1" && shift
		case "$option" in
			(--help) exit-out "$usage" ;;
			(--) break ;;  # No more options.
		esac
	done

}

{ # -- Parameter Processing: Positionals -- #

	hostfile_reference="$1" && shift
	[ -n "$hostfile_reference" ] || error-out 1 'no hostfile name given'


	[ "$#" == 0 ] || error-out 1 'invalid option(s)'

}

# ---
# ---


hostfile_store="${HOME}/hostfiles"

hostfile="${hostfile_store}/${hostfile_reference}"
[ -e "$hostfile" ] || error-out 2 'HOSTFILE not found'
[ -f "$hostfile" ] || error-out 2 'HOSTFILE is not a file'
[ -r "$hostfile" ] || error-out 2 'HOSTFILE is not accessible'

hostctl add "$( superbase "$hostfile" )" --from="$hostfile"
