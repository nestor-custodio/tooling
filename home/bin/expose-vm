#! /bin/env bash
source '/home/nestor/bin/std.lib'

# ---

{ # -- Help Text -- #

	cat <<-EOF | store-as usage
		Usage: $( script-name ) [INSTANCE_NAME]

		Publishes a DNS 'A' record for the given compute instance (or localhost
		if no INSTANCE_NAME is given).


		Mandatory arguments to long options are mandatory for short options too.
		  --help                    Show this help text.


		Exit Status:
		  0  if OK,
		  1  if invalid option,
		  2  if invalid INSTANCE_NAME,
		  3  if unable to determine WAN IP.
	EOF

}

# ---

{ # -- Parameter Processing: Options -- #

	CHAR_OPTS=''
	LONG_OPTS='help'

	set-params
	while true; do
		option="$1" && shift
		case "$option" in
			(--help) exit-out "$usage" ;;
			(--) break ;;  # No more options.
		esac
	done

}

{ # -- Parameter Processing: Positionals -- #

	case "$#" in

		0)
			instance name | store-as instance_name
			;;

		1)
			instance_name="$1" && shift
			;;

		*)
			error-out 1 'invalid option(s)'
			;;

	esac

}

# ---
# ---


declare -A filters
filters[running]="(status:'running')"
filters[by_name]="(name:'${instance_name}')"

wan_ip_selector='.[].networkInterfaces[].accessConfigs[].natIP // ""'

gcloud compute instances list --filter="${filters[running]} AND ${filters[by_name]}" --format='json' | store-as instance_data
[ "$instance_data" != '[]' ] || error-out 2 "invalid INSTANCE_NAME: '${instance_name}'"


jq -r "$wan_ip_selector" <<< "$instance_data" | head -n1 | store-as instance_wan_ip
[ -n "$instance_wan_ip" ] || error-out 3 'unable to determine WAN IP'


dns set "$instance_wan_ip" --name="${instance_name}"
